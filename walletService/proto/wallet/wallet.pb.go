// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // имя пользователя, которому пополняем
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"` // валюта (например "USD", "RUB")
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`   // сумма пополнения
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_proto_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *AddRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AddRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // статус ("Amount successfully added")
	Account       *Account               `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` // обновленный аккаунт
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponse) Reset() {
	*x = AddResponse{}
	mi := &file_proto_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponse) ProtoMessage() {}

func (x *AddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponse.ProtoReflect.Descriptor instead.
func (*AddResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *AddResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type TransferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsernameFrom  string                 `protobuf:"bytes,1,opt,name=username_from,json=usernameFrom,proto3" json:"username_from,omitempty"` // от кого перевод
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                             // кому перевод
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                             // валюта перевода
	Amount        float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`                               // сумма перевода
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	mi := &file_proto_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *TransferRequest) GetUsernameFrom() string {
	if x != nil {
		return x.UsernameFrom
	}
	return ""
}

func (x *TransferRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TransferRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransferRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TransferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // статус ("Amount successfully transferred")
	Account       *Account               `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` // обновленный аккаунт отправителя
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	mi := &file_proto_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *TransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransferResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      int64                  `protobuf:"varint,1,opt,name=walletId,proto3" json:"walletId,omitempty"` // id кошелька
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`  // валюта счета
	Balance       int64                  `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`   // баланс после операции
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_proto_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proto_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *Account) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *Account) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Account) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

var File_proto_wallet_proto protoreflect.FileDescriptor

const file_proto_wallet_proto_rawDesc = "" +
	"\n" +
	"\x12proto/wallet.proto\x12\x06wallet\"\\\n" +
	"\n" +
	"AddRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"R\n" +
	"\vAddResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12)\n" +
	"\aaccount\x18\x02 \x01(\v2\x0f.wallet.AccountR\aaccount\"\x86\x01\n" +
	"\x0fTransferRequest\x12#\n" +
	"\rusername_from\x18\x01 \x01(\tR\fusernameFrom\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\"W\n" +
	"\x10TransferResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12)\n" +
	"\aaccount\x18\x02 \x01(\v2\x0f.wallet.AccountR\aaccount\"[\n" +
	"\aAccount\x12\x1a\n" +
	"\bwalletId\x18\x01 \x01(\x03R\bwalletId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x18\n" +
	"\abalance\x18\x03 \x01(\x03R\abalance2~\n" +
	"\rWalletService\x12.\n" +
	"\x03Add\x12\x12.wallet.AddRequest\x1a\x13.wallet.AddResponse\x12=\n" +
	"\bTransfer\x12\x17.wallet.TransferRequest\x1a\x18.wallet.TransferResponseB&Z$newWalletService/proto/wallet;walletb\x06proto3"

var (
	file_proto_wallet_proto_rawDescOnce sync.Once
	file_proto_wallet_proto_rawDescData []byte
)

func file_proto_wallet_proto_rawDescGZIP() []byte {
	file_proto_wallet_proto_rawDescOnce.Do(func() {
		file_proto_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_wallet_proto_rawDesc), len(file_proto_wallet_proto_rawDesc)))
	})
	return file_proto_wallet_proto_rawDescData
}

var file_proto_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_wallet_proto_goTypes = []any{
	(*AddRequest)(nil),       // 0: wallet.AddRequest
	(*AddResponse)(nil),      // 1: wallet.AddResponse
	(*TransferRequest)(nil),  // 2: wallet.TransferRequest
	(*TransferResponse)(nil), // 3: wallet.TransferResponse
	(*Account)(nil),          // 4: wallet.Account
}
var file_proto_wallet_proto_depIdxs = []int32{
	4, // 0: wallet.AddResponse.account:type_name -> wallet.Account
	4, // 1: wallet.TransferResponse.account:type_name -> wallet.Account
	0, // 2: wallet.WalletService.Add:input_type -> wallet.AddRequest
	2, // 3: wallet.WalletService.Transfer:input_type -> wallet.TransferRequest
	1, // 4: wallet.WalletService.Add:output_type -> wallet.AddResponse
	3, // 5: wallet.WalletService.Transfer:output_type -> wallet.TransferResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_wallet_proto_init() }
func file_proto_wallet_proto_init() {
	if File_proto_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_wallet_proto_rawDesc), len(file_proto_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_wallet_proto_goTypes,
		DependencyIndexes: file_proto_wallet_proto_depIdxs,
		MessageInfos:      file_proto_wallet_proto_msgTypes,
	}.Build()
	File_proto_wallet_proto = out.File
	file_proto_wallet_proto_goTypes = nil
	file_proto_wallet_proto_depIdxs = nil
}
